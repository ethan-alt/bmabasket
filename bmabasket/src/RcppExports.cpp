// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// numModels_cpp
int numModels_cpp(int const& K, int const& P);
RcppExport SEXP _bmabasket_numModels_cpp(SEXP KSEXP, SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int const& >::type K(KSEXP);
    Rcpp::traits::input_parameter< int const& >::type P(PSEXP);
    rcpp_result_gen = Rcpp::wrap(numModels_cpp(K, P));
    return rcpp_result_gen;
END_RCPP
}
// bma_cpp
List bma_cpp(double    const& x, arma::mat const& datMat, arma::mat const& partitionMat, double    const& mu0, double    const& phi0, double    const& logchoose, arma::vec const& logModelPriors);
RcppExport SEXP _bmabasket_bma_cpp(SEXP xSEXP, SEXP datMatSEXP, SEXP partitionMatSEXP, SEXP mu0SEXP, SEXP phi0SEXP, SEXP logchooseSEXP, SEXP logModelPriorsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double    const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type datMat(datMatSEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type partitionMat(partitionMatSEXP);
    Rcpp::traits::input_parameter< double    const& >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< double    const& >::type phi0(phi0SEXP);
    Rcpp::traits::input_parameter< double    const& >::type logchoose(logchooseSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type logModelPriors(logModelPriorsSEXP);
    rcpp_result_gen = Rcpp::wrap(bma_cpp(x, datMat, partitionMat, mu0, phi0, logchoose, logModelPriors));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bmabasket_numModels_cpp", (DL_FUNC) &_bmabasket_numModels_cpp, 2},
    {"_bmabasket_bma_cpp", (DL_FUNC) &_bmabasket_bma_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_bmabasket(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
